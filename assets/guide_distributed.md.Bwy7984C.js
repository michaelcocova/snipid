import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.1L-BeKqY.js";const E=JSON.parse('{"title":"分布式场景","description":"","frontmatter":{},"headers":[],"relativePath":"guide/distributed.md","filePath":"guide/distributed.md"}'),t={name:"guide/distributed.md"};function h(e,s,p,k,r,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="分布式场景" tabindex="-1">分布式场景 <a class="header-anchor" href="#分布式场景" aria-label="Permalink to &quot;分布式场景&quot;">​</a></h1><p>SnipID 提供了强大的分布式支持，可以在多个服务器节点上生成唯一标识符，而不会产生冲突。</p><h2 id="分布式配置" tabindex="-1">分布式配置 <a class="header-anchor" href="#分布式配置" aria-label="Permalink to &quot;分布式配置&quot;">​</a></h2><p>在分布式环境中，你需要为每个节点配置唯一的 workerId 和 datacenterId：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建不同节点的实例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> node1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SnipID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ workerId: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, datacenterId: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> node2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SnipID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ workerId: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, datacenterId: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div><h2 id="配置参数说明" tabindex="-1">配置参数说明 <a class="header-anchor" href="#配置参数说明" aria-label="Permalink to &quot;配置参数说明&quot;">​</a></h2><h3 id="workerid" tabindex="-1">workerId <a class="header-anchor" href="#workerid" aria-label="Permalink to &quot;workerId&quot;">​</a></h3><ul><li>工作节点 ID，用于标识不同的服务器实例</li><li>取值范围：0-1023</li><li>在同一数据中心内必须唯一</li></ul><h3 id="datacenterid" tabindex="-1">datacenterId <a class="header-anchor" href="#datacenterid" aria-label="Permalink to &quot;datacenterId&quot;">​</a></h3><ul><li>数据中心 ID，用于标识不同的数据中心</li><li>取值范围：0-31</li><li>在整个分布式系统中必须唯一</li></ul><h2 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在不同节点上生成 ID</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> node1Id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> node2Id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node2.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;节点 1 生成的 ID:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, node1Id);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;节点 2 生成的 ID:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, node2Id);</span></span></code></pre></div><h2 id="分布式部署建议" tabindex="-1">分布式部署建议 <a class="header-anchor" href="#分布式部署建议" aria-label="Permalink to &quot;分布式部署建议&quot;">​</a></h2><ol><li><p><strong>节点 ID 管理</strong></p><ul><li>使用配置中心统一管理 workerId 和 datacenterId</li><li>确保每个节点的标识符都是唯一的</li></ul></li><li><p><strong>容错处理</strong></p><ul><li>在节点启动时验证 ID 的唯一性</li><li>实现节点故障时的自动切换机制</li></ul></li><li><p><strong>扩展性考虑</strong></p><ul><li>预留足够的节点标识符空间</li><li>制定清晰的节点扩容方案</li></ul></li><li><p><strong>监控和维护</strong></p><ul><li>监控各节点的 ID 生成情况</li><li>定期检查节点配置的一致性</li></ul></li></ol><h2 id="性能优化" tabindex="-1">性能优化 <a class="header-anchor" href="#性能优化" aria-label="Permalink to &quot;性能优化&quot;">​</a></h2><p>在分布式环境中，可以结合 ID 池功能提升性能：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用 ID 池优化性能</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pooledNode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SnipID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  workerId: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  datacenterId: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  poolSize: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 预生成 1000 个 ID</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 批量获取 ID</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ids</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pooledNode.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">batch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><ul><li>确保时钟同步：分布式节点之间的时钟差异会影响 ID 的生成</li><li>合理配置间隔：根据实际需求调整 interval 参数</li><li>定期维护：监控和更新节点配置，确保系统稳定运行</li></ul>`,19)]))}const g=i(t,[["render",h]]);export{E as __pageData,g as default};
