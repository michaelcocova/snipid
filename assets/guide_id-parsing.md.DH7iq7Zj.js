import{_ as s,c as a,o as l,ag as n}from"./chunks/framework.1L-BeKqY.js";const c=JSON.parse('{"title":"ID 解析","description":"","frontmatter":{},"headers":[],"relativePath":"guide/id-parsing.md","filePath":"guide/id-parsing.md"}'),t={name:"guide/id-parsing.md"};function e(h,i,p,r,k,d){return l(),a("div",null,i[0]||(i[0]=[n(`<h1 id="id-解析" tabindex="-1">ID 解析 <a class="header-anchor" href="#id-解析" aria-label="Permalink to &quot;ID 解析&quot;">​</a></h1><p>SnipID 提供了强大的 ID 解析功能，可以从生成的 ID 中提取出各个组成部分的信息。</p><h2 id="解析功能概述" tabindex="-1">解析功能概述 <a class="header-anchor" href="#解析功能概述" aria-label="Permalink to &quot;解析功能概述&quot;">​</a></h2><p>ID 解析功能可以帮助你了解 ID 的生成时间、来源节点等信息，这对于调试和监控非常有用。</p><h2 id="使用方法" tabindex="-1">使用方法 <a class="header-anchor" href="#使用方法" aria-label="Permalink to &quot;使用方法&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建 SnipID 实例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> snipid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SnipID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  workerId: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  datacenterId: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 生成一个 ID</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> snipid.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 解析 ID</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> parsedInfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> snipid.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 查看解析结果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;解析结果:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  时间戳: parsedInfo.timestamp,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  工作节点ID: parsedInfo.workerId,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  数据中心ID: parsedInfo.datacenterId,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  随机盐值: parsedInfo.salt,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="解析结果说明" tabindex="-1">解析结果说明 <a class="header-anchor" href="#解析结果说明" aria-label="Permalink to &quot;解析结果说明&quot;">​</a></h2><h3 id="timestamp" tabindex="-1">timestamp <a class="header-anchor" href="#timestamp" aria-label="Permalink to &quot;timestamp&quot;">​</a></h3><ul><li>ID 生成时的时间戳</li><li>可用于追踪 ID 的生成时间</li><li>基于配置的 epoch 计算</li></ul><h3 id="workerid" tabindex="-1">workerId <a class="header-anchor" href="#workerid" aria-label="Permalink to &quot;workerId&quot;">​</a></h3><ul><li>生成该 ID 的工作节点标识</li><li>用于定位 ID 的来源服务器</li></ul><h3 id="datacenterid" tabindex="-1">datacenterId <a class="header-anchor" href="#datacenterid" aria-label="Permalink to &quot;datacenterId&quot;">​</a></h3><ul><li>数据中心的标识</li><li>用于确定 ID 的生成位置</li></ul><h3 id="salt" tabindex="-1">salt <a class="header-anchor" href="#salt" aria-label="Permalink to &quot;salt&quot;">​</a></h3><ul><li>ID 的随机部分</li><li>用于确保同一时间戳下的唯一性</li></ul><h2 id="应用场景" tabindex="-1">应用场景 <a class="header-anchor" href="#应用场景" aria-label="Permalink to &quot;应用场景&quot;">​</a></h2><ol><li><p><strong>问题排查</strong></p><ul><li>追踪 ID 的生成来源</li><li>分析 ID 生成的时间分布</li></ul></li><li><p><strong>系统监控</strong></p><ul><li>监控各节点的 ID 生成情况</li><li>检测时钟偏差</li></ul></li><li><p><strong>数据分析</strong></p><ul><li>统计 ID 的分布特征</li><li>评估系统负载</li></ul></li></ol><h2 id="最佳实践" tabindex="-1">最佳实践 <a class="header-anchor" href="#最佳实践" aria-label="Permalink to &quot;最佳实践&quot;">​</a></h2><ul><li>在日志中记录完整的解析信息</li><li>定期检查时间戳的准确性</li><li>利用解析结果进行系统优化</li><li>结合监控系统使用解析功能</li></ul><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><ul><li>确保解析使用的配置与生成时的配置一致</li><li>注意处理解析可能出现的异常情况</li><li>考虑解析结果的缓存策略</li><li>避免在性能敏感场景频繁解析</li></ul>`,21)]))}const E=s(t,[["render",e]]);export{c as __pageData,E as default};
